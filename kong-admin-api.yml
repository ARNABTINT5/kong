info:
  contact:
    url: https://github.com/Kong/kong
    name: Kong
  version: 3.0.0.0-enterprise-edition
  title: Kong Admin API
  summary: Kong RESTful Admin API for administration purposes.
  description: "       {{site.base_gateway}} comes with an **internal** RESTful Admin
    API for administration purposes.\n        Requests to the Admin API can be sent
    to any node in the cluster, and Kong will\n        keep the configuration consistent
    across all nodes.\n\n        - `8001` is the default port on which the Admin API
    listens.\n        - `8444` is the default port for HTTPS traffic to the Admin
    API.\n\n        This API is designed for internal use and provides full control
    over Kong, so\n        care should be taken when setting up Kong environments
    to avoid undue public\n        exposure of this API. See [this document][secure-admin-api]
    for a discussion\n        of methods to secure the Admin API.\n      "
  license:
    url: https://github.com/Kong/kong/blob/master/LICENSE
    name: Apache 2.0
components:
  schemas:
    tags:
      type: object
      properties:
        entity_name:
          type: string
        entity_id:
          type: string
        tag:
          type: string
      required:
      - tag
      - entity_name
      - entity_id
    services:
      type: object
      properties:
        path:
          type: string
        id:
          type: string
          format: uuid
        created_at:
          type: integer
          format: int32
        updated_at:
          type: integer
          format: int32
        protocol:
          type: string
          default: http
        ca_certificates:
          type: array
        host:
          type: string
        port:
          type: integer
          default: 80
        name:
          type: string
        retries:
          type: integer
          default: 5
        connect_timeout:
          type: integer
          default: 60000
        write_timeout:
          type: integer
          default: 60000
        read_timeout:
          type: integer
          default: 60000
        client_certificate:
          $ref: '#/components/schemas/certificates'
        tls_verify:
          type: boolean
        tls_verify_depth:
          type: integer
          nullable: true
          default: ~
        tags:
          type: array
        enabled:
          type: boolean
          default: true
      required:
      - protocol
      - host
      - port
      - enabled
    workspaces:
      type: object
      properties:
        id:
          type: string
          format: uuid
        config:
          type: array
        comment:
          type: string
        meta:
          type: array
        created_at:
          type: integer
          format: int32
        name:
          type: string
      required:
      - name
    routes:
      type: object
      properties:
        tags:
          type: array
        id:
          type: string
          format: uuid
        created_at:
          type: integer
          format: int32
        updated_at:
          type: integer
          format: int32
        snis:
          type: array
        name:
          type: string
        regex_priority:
          type: integer
          default: 0
        strip_path:
          type: boolean
          default: true
        path_handling:
          type: string
          default: v0
        service:
          $ref: '#/components/schemas/services'
        preserve_host:
          type: boolean
          default: false
        destinations:
          type: array
        request_buffering:
          type: boolean
          default: true
        headers:
          type: array
        response_buffering:
          type: boolean
          default: true
        methods:
          type: array
        paths:
          type: array
        protocols:
          type: array
          default:
          - http
          - https
        https_redirect_status_code:
          type: integer
          default: 426
        sources:
          type: array
        hosts:
          type: array
      required:
      - protocols
      - https_redirect_status_code
      - strip_path
      - preserve_host
      - request_buffering
      - response_buffering
    consumers:
      type: object
      properties:
        type:
          type: integer
          default: 0
        id:
          type: string
          format: uuid
        username_lower:
          type: string
        created_at:
          type: integer
          format: int32
        tags:
          type: array
        custom_id:
          type: string
        username:
          type: string
      required:
      - type
    plugins:
      type: object
      properties:
        tags:
          type: array
        id:
          type: string
          format: uuid
        ordering: []
        config:
          type: array
        enabled:
          type: boolean
          default: true
        created_at:
          type: integer
          format: int32
        service:
          nullable: true
          $ref: '#/components/schemas/services'
          default: ~
        protocols:
          type: array
          enum:
          - http
          - https
          - tcp
          - tls
          - udp
          - grpc
          - grpcs
          default:
          - grpc
          - grpcs
          - http
          - https
        consumer:
          nullable: true
          $ref: '#/components/schemas/consumers'
          default: ~
        route:
          nullable: true
          $ref: '#/components/schemas/routes'
          default: ~
        name:
          type: string
      required:
      - name
      - protocols
      - enabled
    certificates:
      type: object
      properties:
        tags:
          type: array
        id:
          type: string
          format: uuid
        cert_alt:
          type: string
        created_at:
          type: integer
          format: int32
        key_alt:
          type: string
        cert:
          type: string
        key:
          type: string
      required:
      - cert
      - key
    ca_certificates:
      type: object
      properties:
        cert_digest:
          type: string
        id:
          type: string
          format: uuid
        created_at:
          type: integer
          format: int32
        cert:
          type: string
        tags:
          type: array
      required:
      - cert
    snis:
      type: object
      properties:
        tags:
          type: array
        id:
          type: string
          format: uuid
        created_at:
          type: integer
          format: int32
        certificate:
          $ref: '#/components/schemas/certificates'
        name:
          type: string
      required:
      - name
      - certificate
    upstreams:
      type: object
      properties:
        hash_on_uri_capture:
          type: string
        id:
          type: string
          format: uuid
        hash_fallback_uri_capture:
          type: string
        created_at:
          type: integer
          format: int32
        healthchecks:
          type: array
          default:
            passive:
              type: http
              healthy:
                successes: 0
                http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
              unhealthy:
                http_statuses:
                - 429
                - 500
                - 503
                tcp_failures: 0
                timeouts: 0
                http_failures: 0
            active:
              type: http
              http_path: /
              https_verify_certificate: true
              healthy:
                http_statuses:
                - 200
                - 302
                interval: 0
                successes: 0
              unhealthy:
                tcp_failures: 0
                timeouts: 0
                http_failures: 0
                interval: 0
                http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
              timeout: 1
              concurrency: 10
        slots:
          type: integer
          default: 10000
        algorithm:
          type: string
          default: round-robin
        name:
          type: string
        hash_on:
          type: string
          default: none
        hash_fallback:
          type: string
          default: none
        hash_on_header:
          type: string
        hash_fallback_header:
          type: string
        hash_on_cookie:
          type: string
        client_certificate:
          $ref: '#/components/schemas/certificates'
        hash_on_cookie_path:
          type: string
          default: /
        hash_on_query_arg:
          type: string
        host_header:
          type: string
        hash_fallback_query_arg:
          type: string
        tags:
          type: array
      required:
      - name
    targets:
      type: object
      properties:
        tags:
          type: array
        id:
          type: string
          format: uuid
        created_at:
          type: number
          format: float
        upstream:
          $ref: '#/components/schemas/upstreams'
        target:
          type: string
        weight:
          type: integer
          default: 100
      required:
      - upstream
      - target
    vaults:
      type: object
      properties:
        tags:
          type: array
        id:
          type: string
          format: uuid
        config:
          type: array
        created_at:
          type: integer
          format: int32
        prefix:
          type: string
        updated_at:
          type: integer
          format: int32
        description:
          type: string
        name:
          type: string
      required:
      - prefix
      - name
    parameters:
      type: object
      properties:
        created_at:
          type: integer
          format: int32
        value:
          type: string
        key:
          type: string
      required:
      - key
      - value
    clustering_data_planes:
      type: object
      properties:
        id:
          type: string
        last_seen:
          type: integer
          format: int32
        config_hash:
          type: string
        hostname:
          type: string
        ip:
          type: string
        sync_status:
          type: string
          default: unknown
        version:
          type: string
      required:
      - id
      - ip
      - hostname
      - sync_status
paths:
  /timers:
    get:
      summary: Retrieve runtime debugging info of Kong's timers
  /cache/{key}:
    delete:
      description: This method is not available when using DB-less mode.
    get: []
  /upstreams/{upstreams}/targets/all:
    get:
      summary: List all Targets
  /config:
    post:
      description: This method is only available when using DB-less mode.
    get:
      description: This method is only available when using DB-less mode.
  /consumers:
    get: []
  /upstreams/{upstreams}/targets/{targets}:
    put:
      description: This method is not available when using DB-less mode.
    patch:
      description: This method is not available when using DB-less mode.
      summary: Update Target
    delete:
      description: This method is not available when using DB-less mode.
      summary: Delete Target
    get: []
  /upstreams/{upstreams}/targets/{targets}/healthy:
    put:
      description: This method is not available when using DB-less mode.
      summary: Set target as healthy
  /plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /plugins:
    post:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:
    put:
      description: This method is not available when using DB-less mode.
      summary: Set target address as healthy
  /services/{services}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /upstreams/:upstreams/targets/:targets/:address/unhealthy:
    put: []
  /tags/{tags}:
    get:
      summary: ' List entity IDs by tag '
  /plugins/enabled:
    get:
      summary: Retrieve Enabled Plugins
  /upstreams/{upstreams}/targets/{targets}/unhealthy:
    put:
      description: This method is not available when using DB-less mode.
      summary: Set target as unhealthy
  /routes/{routes}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins: []
  /consumers/:consumers/plugins/:plugins:
    patch: []
  /upstreams/:upstreams/targets:
    post: []
    get: []
  /endpoints:
    get:
      summary: List available endpoints
  /schemas/plugins/validate:
    post: []
  /snis/{snis}/certificate: []
  /upstreams/{upstreams}/health:
    get:
      summary: Show Upstream health for node
  /consumers/{consumers}: []
  /:
    get:
      summary: Retrieve node information
  /certificates/{certificates}:
    patch:
      description: This method is not available when using DB-less mode.
    put:
      description: This method is not available when using DB-less mode.
    get: []
  /certificates/{certificates}/snis: []
  /auth:
    delete:
      description: This method is not available when using DB-less mode.
    get: []
  /certificates:
    post:
      description: This method is not available when using DB-less mode.
  /plugins/schema/{name}:
    get: []
  /clustering/data-planes: []
  /userinfo:
    get: []
  /status:
    get:
      summary: Retrieve node status
  /schemas/{db_entity_name}/validate:
    post:
      description: This method is not available when using DB-less mode.
      summary: Validate a configuration against a schema
  /certificates/{certificates}/snis/{snis}: []
  /targets/{targets}: []
  /targets/{targets}/upstream: []
  /schemas/{name}:
    get:
      summary: Retrieve Entity Schema
  /services/{services}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /routes/{routes}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /clustering/status: []
  /targets: []
  /schemas/plugins/{name}:
    get:
      summary: Retrieve Plugin Schema
  /cache:
    delete:
      description: This method is not available when using DB-less mode.
servers:
- description: 8001 is the default port on which the Admin API listens.
  url: http://localhost:8001
- description: 8444 is the default port for HTTPS traffic to the Admin API.
  url: https://localhost:8444
openapi: 3.1.0
