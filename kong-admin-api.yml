servers:
- description: 8001 is the default port on which the Admin API listens.
  url: http://localhost:8001
- description: 8444 is the default port for HTTPS traffic to the Admin API.
  url: https://localhost:8444
openapi: 3.1.0
info:
  summary: Kong RESTful Admin API for administration purposes.
  version: 3.0.0.0-enterprise-edition
  description: "       {{site.base_gateway}} comes with an **internal** RESTful Admin
    API for administration purposes.\n        Requests to the Admin API can be sent
    to any node in the cluster, and Kong will\n        keep the configuration consistent
    across all nodes.\n\n        - `8001` is the default port on which the Admin API
    listens.\n        - `8444` is the default port for HTTPS traffic to the Admin
    API.\n\n        This API is designed for internal use and provides full control
    over Kong, so\n        care should be taken when setting up Kong environments
    to avoid undue public\n        exposure of this API. See [this document][secure-admin-api]
    for a discussion\n        of methods to secure the Admin API.\n      "
  contact:
    url: https://github.com/Kong/kong
    name: Kong
  title: Kong Admin API
  license:
    url: https://github.com/Kong/kong/blob/master/LICENSE
    name: Apache 2.0
components:
  schemas:
    routes:
      required:
      - protocols
      - https_redirect_status_code
      - strip_path
      - preserve_host
      - request_buffering
      - response_buffering
      type: object
      properties:
        protocols:
          default:
          - http
          - https
          type: array
        response_buffering:
          default: true
          type: boolean
        sources:
          type: array
        service:
          $ref: '#/components/schemas/services'
        tags:
          type: array
        name:
          type: string
        headers:
          type: array
        id:
          type: string
          format: uuid
        created_at:
          type: integer
          format: int32
        updated_at:
          type: integer
          format: int32
        hosts:
          type: array
        snis:
          type: array
        paths:
          type: array
        https_redirect_status_code:
          default: 426
          type: integer
        strip_path:
          default: true
          type: boolean
        destinations:
          type: array
        path_handling:
          default: v0
          type: string
        regex_priority:
          default: 0
          type: integer
        preserve_host:
          default: false
          type: boolean
        methods:
          type: array
        request_buffering:
          default: true
          type: boolean
    consumers:
      required:
      - type
      type: object
      properties:
        username_lower:
          type: string
        username:
          type: string
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        type:
          default: 0
          type: integer
        tags:
          type: array
        custom_id:
          type: string
    plugins:
      required:
      - name
      - protocols
      - enabled
      type: object
      properties:
        protocols:
          type: array
          default:
          - grpc
          - grpcs
          - http
          - https
          enum:
          - http
          - https
          - tcp
          - tls
          - udp
          - grpc
          - grpcs
        config:
          type: array
        tags:
          type: array
        name:
          type: string
        route:
          $ref: '#/components/schemas/routes'
          default: ~
          nullable: true
        consumer:
          $ref: '#/components/schemas/consumers'
          default: ~
          nullable: true
        ordering: []
        id:
          type: string
          format: uuid
        service:
          $ref: '#/components/schemas/services'
          default: ~
          nullable: true
        enabled:
          default: true
          type: boolean
        created_at:
          type: integer
          format: int32
    certificates:
      required:
      - cert
      - key
      type: object
      properties:
        tags:
          type: array
        cert_alt:
          type: string
        key:
          type: string
        id:
          type: string
          format: uuid
        key_alt:
          type: string
        cert:
          type: string
        created_at:
          type: integer
          format: int32
    tags:
      required:
      - tag
      - entity_name
      - entity_id
      type: object
      properties:
        entity_id:
          type: string
        entity_name:
          type: string
        tag:
          type: string
    snis:
      required:
      - name
      - certificate
      type: object
      properties:
        certificate:
          $ref: '#/components/schemas/certificates'
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        name:
          type: string
        tags:
          type: array
    upstreams:
      required:
      - name
      type: object
      properties:
        hash_on_header:
          type: string
        hash_fallback_header:
          type: string
        tags:
          type: array
        name:
          type: string
        hash_on_cookie_path:
          default: /
          type: string
        client_certificate:
          $ref: '#/components/schemas/certificates'
        hash_on_query_arg:
          type: string
        hash_fallback_query_arg:
          type: string
        id:
          type: string
          format: uuid
        hash_on_uri_capture:
          type: string
        hash_fallback_uri_capture:
          type: string
        host_header:
          type: string
        created_at:
          type: integer
          format: int32
        slots:
          default: 10000
          type: integer
        healthchecks:
          default:
            passive:
              unhealthy:
                http_statuses:
                - 429
                - 500
                - 503
                tcp_failures: 0
                timeouts: 0
                http_failures: 0
              type: http
              healthy:
                successes: 0
                http_statuses:
                - 200
                - 201
                - 202
                - 203
                - 204
                - 205
                - 206
                - 207
                - 208
                - 226
                - 300
                - 301
                - 302
                - 303
                - 304
                - 305
                - 306
                - 307
                - 308
            active:
              http_path: /
              timeout: 1
              https_verify_certificate: true
              healthy:
                http_statuses:
                - 200
                - 302
                successes: 0
                interval: 0
              unhealthy:
                tcp_failures: 0
                timeouts: 0
                interval: 0
                http_failures: 0
                http_statuses:
                - 429
                - 404
                - 500
                - 501
                - 502
                - 503
                - 504
                - 505
              type: http
              concurrency: 10
          type: array
        algorithm:
          default: round-robin
          type: string
        hash_on:
          default: none
          type: string
        hash_on_cookie:
          type: string
        hash_fallback:
          default: none
          type: string
    workspaces:
      required:
      - name
      type: object
      properties:
        comment:
          type: string
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        name:
          type: string
        config:
          type: array
        meta:
          type: array
    vaults:
      required:
      - prefix
      - name
      type: object
      properties:
        tags:
          type: array
        updated_at:
          type: integer
          format: int32
        description:
          type: string
        config:
          type: array
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: integer
          format: int32
        prefix:
          type: string
    targets:
      required:
      - upstream
      - target
      type: object
      properties:
        weight:
          default: 100
          type: integer
        created_at:
          type: number
          format: float
        id:
          type: string
          format: uuid
        tags:
          type: array
        upstream:
          $ref: '#/components/schemas/upstreams'
        target:
          type: string
    ca_certificates:
      required:
      - cert
      type: object
      properties:
        cert_digest:
          type: string
        created_at:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        cert:
          type: string
        tags:
          type: array
    clustering_data_planes:
      required:
      - id
      - ip
      - hostname
      - sync_status
      type: object
      properties:
        hostname:
          type: string
        ip:
          type: string
        version:
          type: string
        id:
          type: string
        config_hash:
          type: string
        sync_status:
          default: unknown
          type: string
        last_seen:
          type: integer
          format: int32
    parameters:
      required:
      - key
      - value
      type: object
      properties:
        created_at:
          type: integer
          format: int32
        value:
          type: string
        key:
          type: string
    services:
      required:
      - protocol
      - host
      - port
      - enabled
      type: object
      properties:
        retries:
          default: 5
          type: integer
        connect_timeout:
          default: 60000
          type: integer
        tags:
          type: array
        name:
          type: string
        read_timeout:
          default: 60000
          type: integer
        client_certificate:
          $ref: '#/components/schemas/certificates'
        tls_verify:
          type: boolean
        tls_verify_depth:
          type: integer
          nullable: true
          default: ~
        enabled:
          default: true
          type: boolean
        path:
          type: string
        port:
          default: 80
          type: integer
        created_at:
          type: integer
          format: int32
        updated_at:
          type: integer
          format: int32
        protocol:
          default: http
          type: string
        ca_certificates:
          type: array
        host:
          type: string
        id:
          type: string
          format: uuid
        write_timeout:
          default: 60000
          type: integer
paths:
  /services/{services}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /status:
    get:
      summary: Retrieve node status
  /config:
    post: []
    get: []
  /routes/{routes}/plugins:
    post:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/unhealthy:
    put:
      description: This method is not available when using DB-less mode.
      summary: Set target as unhealthy
  /schemas/plugins/{name}:
    get:
      summary: Retrieve Plugin Schema
  /clustering/data-planes: []
  /upstreams/{upstreams}/health:
    get:
      summary: Show Upstream health for node
  /clustering/status: []
  /targets/{targets}/upstream: []
  /cache:
    delete:
      description: This method is not available when using DB-less mode.
  /services/{services}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/{address}/healthy:
    put:
      description: This method is not available when using DB-less mode.
      summary: Set target address as healthy
  /upstreams/{upstreams}/targets:
    post:
      description: This method is not available when using DB-less mode.
    get: []
  /upstreams/{upstreams}/targets/{targets}:
    put:
      description: This method is not available when using DB-less mode.
    patch:
      description: This method is not available when using DB-less mode.
      summary: Update Target
    delete:
      description: This method is not available when using DB-less mode.
      summary: Delete Target
    get: []
  /consumers:
    get: []
  /endpoints:
    get:
      summary: List available endpoints
  /upstreams/{upstreams}/targets/{targets}/{address}/unhealthy:
    put:
      description: This method is not available when using DB-less mode.
      summary: Set target address as unhealthy
  /tags/{tags}:
    get:
      summary: ' List entity IDs by tag '
  /plugins:
    post:
      description: This method is not available when using DB-less mode.
  /cache/{key}:
    delete:
      description: This method is not available when using DB-less mode.
    get: []
  /routes/{routes}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /upstreams/{upstreams}/targets/{targets}/healthy:
    put:
      description: This method is not available when using DB-less mode.
      summary: Set target as healthy
  /certificates/{certificates}:
    put:
      description: This method is not available when using DB-less mode.
    patch:
      description: This method is not available when using DB-less mode.
    get: []
  /certificates/{certificates}/snis: []
  /:
    get:
      summary: Retrieve node information
  /schemas/{name}:
    get:
      summary: Retrieve Entity Schema
  /plugins/schema/{name}:
    get: []
  /auth:
    delete:
      description: This method is not available when using DB-less mode.
    get: []
  /snis/{snis}/certificate: []
  /certificates:
    post:
      description: This method is not available when using DB-less mode.
  /timers:
    get: []
  /consumers/{consumers}: []
  /certificates/{certificates}/snis/{snis}: []
  /userinfo:
    get: []
  /upstreams/:upstreams/targets/all:
    get: []
  /plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /consumers/{consumers}/plugins: []
  /consumers/{consumers}/plugins/{plugins}:
    patch:
      description: This method is not available when using DB-less mode.
  /targets/{targets}: []
  /schemas/plugins/validate:
    post:
      description: This method is not available when using DB-less mode.
      summary: Validate a plugin configuration against the schema
  /plugins/enabled:
    get:
      summary: Retrieve Enabled Plugins
  /targets: []
  /schemas/{db_entity_name}/validate:
    post:
      description: This method is not available when using DB-less mode.
      summary: Validate a configuration against a schema
